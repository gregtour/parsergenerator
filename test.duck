#### example 2D pong game ####
import game2D
include 'paddle.png'
include 'ball.png'

module pong

ball = Sprite('ball.png')
ball.x = 50
ball.y = 50

ball.vx = 10.0
ball.vy = -5.0

p1 = Sprite('paddle.png')
p1.x = 0
p1.y = 25

p2 = Sprite('paddle.png')
p2.x = 90
p2.y = 25

p1score = 0
p2score = 0
scoreDisplay = Text("0 - 0")
scoreDisplay.x = 0
scoreDisplay.y = 0

; update the score and reset the ball
func score(player)
  ball.x = 50
  ball.y = 50
  ball.vy = 5.0
  ball.vx = 10.0

  if player == 1 then
    p1score++
  else if player == 2 then
    p2score++
    ball.vx *= -1.0
  endif
  
  scoreDisplay.text = p1score + " - " + p2score

  draw()
  delay(5.0)
endfunc

; main loop
while true do

  ; player 1 controls
  if keydown('z') then
    p1.y += 10
  else if keydown('a') then
    p1.y -= 10
  endif
  
  ; player 2 controls
  if keydown('m') then
    p2.y += 10
  else if keydown('k') then
    p2.y -= 10
  endif
  
  ; ball motion
  ball.x += ball.vx
  ball.y += ball.vy
  
  ; player 1 paddle check
  if ball.x < 10 then
    if ball.y > p1.y and ball.y < p1.y + 50 then
      ball.vx = abs(ball.vx)
    endif
  endif
  
  ; player 2 paddle check
  if ball.x > 90 then
    if ball.y > p2.y and ball.y < p2.y + 50 then
      ball.vx = -abs(ball.vx)
    endif
  endif
  
  ; score point check
  if ball.x < 0 then
    score(2)
  else if ball.x > 100 then
    score(1)
  endif

  draw()
loop

endmodule
####

#### example 3D game ####
import game3D
import draw2D
import scene
import collision

include 'ground.3d'
include 'ship.3d'
include 'obstacle.3d'


module cuberunner

ground = InfiniteMesh('ground.3d')
ship = Mesh('ship.3d')
camera = FollowCamera(ship)
obstacles = []
distance = 0

func lose()
  message = text(distance + " You lose. Press any key to try again.")
  message.x = 50
  message.y = 50
  draw()
  delay(2.0)
  waitkey()

  message.remove()
  start()
endfunc

func start()
  scene.remove(obstacles)
  obstacles = []
  
  for i = 1 to 50 do
    obstacle = Mesh('obstacle3d')
    obstacle.x = rand() mod 100 - 50
    obstacle.z = rand() mod 100
    obstacles.push(obstacle)
  loop  
endfunc

start()
while true do
  if keydown('a') then
    ship.x -= 10.0
  else if keydown('d') then
    ship.x += 10.0
  endif
  
  distance += 10.0
  ship.z = distance
  
  for obstacle in obstacles do
    if obstacle.z > distance then
      obstacle.remove()
      obstacle = Mesh('obstacle.3d')
      obstacle.x = ship.x + rand() mod 100 - 50
      obstacle.z = distance + 100.0
      obstacles.push(obstacle)
    endif
  loop
  
  if Collides(ship, obstacles) then
    lose()
  endif

  draw()
loop

endmodule
####

